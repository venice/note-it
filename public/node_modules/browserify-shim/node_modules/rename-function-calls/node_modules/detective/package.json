{
  "name": "detective",
  "description": "find all require() calls by walking the AST",
  "version": "2.4.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/node-detective.git"
  },
  "main": "index.js",
  "keywords": [
    "require",
    "source",
    "analyze",
    "ast"
  ],
  "scripts": {
    "test": "tap test/*.js"
  },
  "dependencies": {
    "escodegen": "0.0.15",
    "esprima-six": "0.0.3"
  },
  "devDependencies": {
    "tap": "~0.4.0"
  },
  "license": "MIT",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "readme": "# detective\r\n\r\nfind all calls to `require()` by walking the AST\r\n\r\n[![build status](https://secure.travis-ci.org/substack/node-detective.png)](http://travis-ci.org/substack/node-detective)\r\n\r\n# example\r\n\r\n## strings\r\n\r\nstrings_src.js:\r\n\r\n``` js\r\nvar a = require('a');\r\nvar b = require('b');\r\nvar c = require('c');\r\n```\r\n\r\nstrings.js:\r\n\r\n``` js\r\nvar detective = require('detective');\r\nvar fs = require('fs');\r\n\r\nvar src = fs.readFileSync(__dirname + '/strings_src.js');\r\nvar requires = detective(src);\r\nconsole.dir(requires);\r\n```\r\n\r\noutput:\r\n\r\n```\r\n$ node examples/strings.js\r\n[ 'a', 'b', 'c' ]\r\n```\r\n\r\n# methods\r\n\r\n``` js\r\nvar detective = require('detective');\r\n```\r\n\r\n## detective(src, opts)\r\n\r\nGive some source body `src`, return an array of all the `require()` calls with\r\nstring arguments.\r\n\r\nThe options parameter `opts` is passed along to `detective.find()`.\r\n\r\n## detective.find(src, opts)\r\n\r\nGive some source body `src`, return an object with \"strings\" and \"expressions\"\r\narrays for each of the require() calls.\r\n\r\nThe \"expressions\" array will contain the stringified expressions.\r\n\r\nOptionally you can specify a different function besides `\"require\"` to analyze\r\nwith `opts.word`.\r\n\r\nYou can also specify `opts.nodes = true` in order to include a \"nodes\" array \r\nwhich contains an AST node for each of the require() calls.\r\n\r\nYou can use `opts.isRequire(node)` to return a boolean signifying whether an\r\nesprima AST `node` is a require call.\r\n\r\nYou can use `opts.parse` to supply options parsed to the parser ([esprima](http://esprima.org/doc/index.html)).\r\n\r\n# install\r\n\r\nWith [npm](https://npmjs.org) do:\r\n\r\n```\r\nnpm install detective\r\n```\r\n\r\n# license\r\n\r\nMIT\r\n",
  "readmeFilename": "readme.markdown",
  "bugs": {
    "url": "https://github.com/substack/node-detective/issues"
  },
  "homepage": "https://github.com/substack/node-detective",
  "_id": "detective@2.4.0",
  "dist": {
    "shasum": "69b2a6edfab6147a47c8164605ddad9bcc5b369e"
  },
  "_resolved": "git://github.com/thlorenz/node-detective#4dffbc2ccdf969538c7911b542250b65b8f148c5",
  "_from": "detective@git://github.com/thlorenz/node-detective#fix-noargs"
}
